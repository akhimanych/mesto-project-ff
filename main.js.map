{"version":3,"file":"main.js","mappings":"mBAAA,IAAMA,EAAe,CACnBC,QAAS,6CACTC,QAAS,CACPC,cAAe,uCACf,eAAgB,qBAKpB,SAASC,EAAUC,GACjB,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,WAADC,OAAYL,EAAIM,OAAM,KAAAD,OAAIL,EAAIO,YACrD,CAGA,IAsCMC,EAAc,SAACC,GACnB,OAAOC,MAAM,GAADL,OAAIV,EAAaC,QAAO,iBAAAS,OAAgBI,GAAU,CAC5DE,OAAQ,MACRd,QAASF,EAAaE,QACtBe,KAAMC,KAAKC,UAAU,CAAC,KACrBC,MAAK,SAACf,GAAG,OAAKD,EAAUC,EAAI,GACjC,EAGMgB,EAAc,SAACP,GACnB,OAAOC,MAAM,GAADL,OAAIV,EAAaC,QAAO,iBAAAS,OAAgBI,GAAU,CAC5DE,OAAQ,SACRd,QAASF,EAAaE,UACrBkB,MAAK,SAACf,GAAG,OAAKD,EAAUC,EAAI,GACjC,ECnEMiB,EAAeC,SAASC,cAAc,kBAAkBC,QAG9D,SAASC,EAAiBC,EAAMb,GAC9B,ODkEmB,SAACA,GACpB,OAAOC,MAAM,GAADL,OAAIV,EAAaC,QAAO,WAAAS,OAAUI,GAAU,CACtDE,OAAQ,SACRd,QAASF,EAAaE,UACrBkB,MAAK,SAACf,GAAG,OAAKD,EAAUC,EAAI,GACjC,CCvESuB,CAAad,GACjBM,MAAK,SAACS,GACLF,EAAKG,QACP,IACCC,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GACJ,CAGA,SAASG,EACPC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAcnB,EAAaE,cAAc,SAASkB,WAAU,GAElE,IAAKD,EAEH,OADAR,QAAQU,MAAM,qCACP,KAGT,IAAMC,EAAYH,EAAYjB,cAAc,gBACtCqB,EAAYJ,EAAYjB,cAAc,gBACtCsB,EAAeL,EAAYjB,cAAc,wBACzCuB,EAAaN,EAAYjB,cAAc,sBACvCwB,EAAcP,EAAYjB,cAAc,uBAE9C,OACGoB,GACAC,GACAC,GACAC,GACAC,GAOHJ,EAAUK,IAAMb,EAASc,KACzBN,EAAUO,IAAM,sBAAHzC,OAAyB0B,EAASgB,MAC/CP,EAAUQ,YAAcjB,EAASgB,KACjCJ,EAAYK,YAAcjB,EAASkB,MAAMC,OAEzBnB,EAASkB,MAAME,MAAK,SAACC,GAAI,OAAKA,EAAKC,MAAQrB,CAAM,KAE/DU,EAAWY,UAAUC,IAAI,+BAGvBvB,IAAWD,EAASyB,MAAMH,IAC5BZ,EAAagB,iBAAiB,SAAS,WACrCxB,EAAmBG,EAAaL,EAASsB,IAC3C,IAEAZ,EAAahB,SAGfiB,EAAWe,iBAAiB,SAAS,WACnCvB,EAASQ,EAAYX,EAASsB,IAAKV,EACrC,IAEAJ,EAAUkB,iBAAiB,SAAS,WAClCtB,EAAiBJ,EACnB,IAEOK,IA/BLR,QAAQU,MAAM,uCACP,KA+BX,CAGA,SAASoB,EAASC,EAAKlD,EAAQkC,IAChBgB,EAAIL,UAAUM,SAAS,+BAChC5C,EACAR,GACCC,GACFM,MAAK,SAACS,GACLmC,EAAIL,UAAUO,OAAO,+BACrBlB,EAAYK,YAAcxB,EAAOyB,MAAMC,MACzC,IACCxB,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,GACJ,CCzFA,SAASmC,EAAUC,GACZA,IACLA,EAAMT,UAAUC,IAAI,mBACpBrC,SAASuC,iBAAiB,UAAWO,GACvC,CAGA,SAASC,EAAWF,GACbA,IACLA,EAAMT,UAAU7B,OAAO,mBACvBP,SAASgD,oBAAoB,UAAWF,GAC1C,CAGA,SAASA,EAAcG,GACrB,GAAkB,WAAdA,EAAMC,IAAkB,CAC1B,IAAMC,EAAcnD,SAASC,cAAc,oBACvCkD,GAAaJ,EAAWI,EAC9B,CACF,CAGA,SAASC,EAA4BH,GACnC,GACEA,EAAMI,OAAOjB,UAAUM,SAAS,iBAChCO,EAAMI,SAAWJ,EAAMK,cACvB,CACA,IAAMT,EAAQI,EAAMI,OAAOE,QAAQ,UAC/BV,GAASA,EAAMT,UAAUM,SAAS,oBACpCK,EAAWF,EAEf,CACF,CC9BA,IAQMW,EAAiB,SAACC,EAAaC,GACnC,IAAMC,EAAeF,EAAYxD,cAAc,IAADd,OAAKuE,EAAaE,GAAE,WAClEF,EAAatB,UAAU7B,OAAO,2BAC9BoD,EAAavB,UAAU7B,OAAO,6BAC9BoD,EAAa7B,YAAc,EAC7B,EA8BM+B,EAAmB,SAACC,EAAWC,IARb,SAACD,GACvB,OAAOA,EAAU7B,MAAK,SAACyB,GACrB,OAAQA,EAAaM,SAASC,KAChC,GACF,CAKIC,CAAgBJ,IAIhBC,EAAcI,UAAW,EAC3BJ,EAAc3B,UAAU7B,OAAO,4BAJ7BwD,EAAcI,UAAW,EACzBJ,EAAc3B,UAAUC,IAAI,0BAKhC,E,sGCtCA,IDoD0B+B,ECpDpBC,EAAmB,CACvBC,aAAc,eACdC,cAAe,gBACfC,qBAAsB,iBACtBC,oBAAqB,yBACrBC,gBAAiB,0BACjBC,WAAY,wBD8CYP,EC3CTC,ED4CIO,MAAMC,KAAK7E,SAAS8E,iBAAiBV,EAAcE,eAC3DS,SAAQ,SAACtB,IAdG,SAACA,EAAaW,GACnC,IAAMN,EAAYc,MAAMC,KAAKpB,EAAYqB,iBAAiBV,EAAcG,gBAClER,EAAgBN,EAAYxD,cAAcmE,EAAcI,sBAC9DX,EAAkBC,EAAWC,GAC7BD,EAAUiB,SAAQ,SAACrB,GACfA,EAAanB,iBAAiB,SAAS,YA1C/B,SAACkB,EAAaC,GACtBA,EAAaM,SAASgB,gBACtBtB,EAAauB,kBAAkBvB,EAAawB,QAAQC,cAEpDzB,EAAauB,kBAAkB,IAGrCvB,EAAa0B,gBAEN1B,EAAaM,SAASC,MAGvBT,EAAeC,EAAaC,GA5Bb,SAACD,EAAaC,EAAcyB,GACjD,IAAMxB,EAAeF,EAAYxD,cAAc,IAADd,OAAKuE,EAAaE,GAAE,WAClEF,EAAatB,UAAUC,IAAI,2BAC3BsB,EAAa7B,YAAcqD,EAC3BxB,EAAavB,UAAUC,IAAI,4BAC7B,CAqBQgD,CAAe5B,EAAaC,EAAcA,EAAa4B,kBAI/D,CA6BYC,CAAQ9B,EAAaC,GACrBG,EAAkBC,EAAWC,EACjC,GACJ,GACJ,CAKQyB,CAAiB/B,EAAaW,EAClC,IC5CJ,IAAMqB,EAAazF,SAASC,cAAc,iBACtCa,EAAS,GACT4E,EAAa,GAEXC,EAAmB3F,SAASC,cAAc,oBAC1C2F,EAAe5F,SAASC,cAAc,wBACtC4F,EAAa7F,SAASC,cAAc,qBAEpC6F,EAAe9F,SAASC,cAAc,mBACtC8F,EAAqB/F,SAASC,cAAc,yBAC5C+F,EAAahG,SAASC,cAAc,yBACpCgG,EAAWN,aAAgB,EAAhBA,EAAkB1F,cAAc,gBAC3CiG,EAAYD,aAAQ,EAARA,EAAUhG,cAAc,2BACpCkG,EAAWF,aAAQ,EAARA,EAAUhG,cAAc,kCAGnCmG,EAAgBpG,SAASC,cAAc,wBACvCoG,EAAcT,aAAY,EAAZA,EAAc3F,cAAc,gBAC1CqG,EAAYD,aAAW,EAAXA,EAAapG,cAAc,gCACvCsG,EAAYF,aAAW,EAAXA,EAAapG,cAAc,0BAGvCuG,EAAgBX,aAAU,EAAVA,EAAY5F,cAAc,iBAC1CwG,EAAoBZ,aAAU,EAAVA,EAAY5F,cAAc,mBAGpD,SAASyG,EAAQC,EAAMvH,GACNuH,EAAK1G,cAAc,kBAEzB6B,YADL1C,EACmB,gBAEA,WAEzB,CAGA,SAAS6B,EAAiBb,GACxBoG,EAAc9E,IAAMtB,EAAKuB,KACzB6E,EAAc5E,IAAMxB,EAAKyB,KACzB4E,EAAkB3E,YAAc1B,EAAKyB,KACrCe,EAAUiD,EACZ,CAuFA7F,SAAS8E,iBAAiB,UAAUC,SAAQ,SAAClC,GAC3CA,EAAMT,UAAUC,IAAI,qBACpBQ,EAAMN,iBAAiB,QAASa,EAClC,IAGA4C,SAAAA,EAAYzD,iBAAiB,SAAS,WA5EhC2D,GAAaC,GAAYL,GAAgBC,IAC3CG,EAAUU,MAAQd,EAAahE,YAC/BqE,EAASS,MAAQb,EAAmBjE,aA4EtCc,EAAU+C,EACZ,IAGAS,SAAAA,EAAe7D,iBAAiB,SAAS,WACvCK,EAAUgD,EACZ,IAEAK,EAAS1D,iBAAiB,UAhF1B,SAA6BE,GAC3BA,EAAIoE,iBACJH,EAAQjE,EAAIY,QAAQ,GAEpB,IJjEsByD,EIiEhBC,EAAUb,EAAUU,MACpBI,EAASb,EAASS,MAExBd,EAAahE,YAAciF,EAC3BhB,EAAmBjE,YAAckF,GJrEXF,EIuEH,CACjBjF,KAAMkF,EACNE,MAAOD,GJxEFxH,MAAM,GAADL,OAAIV,EAAaC,QAAO,aAAa,CAC/Ce,OAAQ,QACRd,QAASF,EAAaE,QACtBe,KAAMC,KAAKC,UAAU,CACnBiC,KAAMiF,EAAWjF,KACjBoF,MAAOH,EAAWG,UAEnBpH,MAAK,SAACf,GAAG,OAAKD,EAAUC,EAAI,KIqE5Be,MAAK,SAACqH,GACLxG,QAAQC,IAAI,4BAA6BuG,EAC3C,IACC1G,OAAM,SAACY,GACNV,QAAQU,MAAM,iCAAkCA,EAClD,IACC+F,SAAQ,WACPT,EAAQjE,EAAIY,QAAQ,EACtB,IAEFN,EAAW4C,EACb,IAsDAU,SAAAA,EAAa9D,iBAAiB,UAnD9B,SAA6BE,GJ/ET,IAAC2E,EIgFnB3E,EAAIoE,iBACJH,EAAQjE,EAAIY,QAAQ,IJjFD+D,EImFH,CACdvF,KAAMyE,EAAUM,MAChBjF,KAAM4E,EAAUK,OJpFXpH,MAAM,GAADL,OAAIV,EAAaC,QAAO,UAAU,CAC5Ce,OAAQ,OACRd,QAASF,EAAaE,QACtBe,KAAMC,KAAKC,UAAU,CACnBiC,KAAMuF,EAAQvF,KACdF,KAAMyF,EAAQzF,SAEf9B,MAAK,SAACf,GAAG,OAAKD,EAAUC,EAAI,KIiF5Be,MAAK,SAACO,GACL,IAAMc,EAAcN,EAClBR,EACAU,EACAX,EACAqC,EACAvB,GAGEC,GACFuE,EAAW4B,QAAQnG,GAGrBuB,EAAIY,OAAOiE,QACXvE,EAAW6C,EACb,IACCpF,OAAM,SAACY,GACNV,QAAQU,MAAM,kCAAmCA,EACnD,IACC+F,SAAQ,WACPT,EAAQjE,EAAIY,QAAQ,EACtB,GACJ,IAsBA,IAAMkE,EAAqBvH,SAASC,cAAc,0BAC5CuH,EAAoBxH,SAASC,cAAc,yBAC3CwH,EAAmBzH,SAASC,cAAc,wBAEhDsH,EAAmBhF,iBAAiB,SAAS,YDlGrB,SAACkB,EAAaW,GAClC,IAAMsD,EAAgB9C,MAAMC,KAAKpB,EAAYqB,iBAAiBV,EAAcG,gBACtER,EAAgBN,EAAYxD,cAAcmE,EAAcI,sBAC9DkD,EAAc3C,SAAQ,SAACrB,GACnBF,EAAeC,EAAaC,EAChC,IACAG,EAAkB6D,EAAe3D,EACrC,CC4FE4D,CAAgBH,EAAmBnD,GACnCzB,EAAU4E,EACZ,IAEA,IAAMI,EAAe5H,SAASC,cAAc,mBAuB7BD,SAASC,cAAc,uBAE/BsC,iBAAiB,UAtBxB,SAAkCE,GJ5GT,IAACoF,EI6GxBpF,EAAIoE,iBACJH,EAAQjE,EAAIY,QAAQ,IJ9GIwE,EIgHP,CACfA,OAAQJ,EAAiBb,OJhHpBpH,MAAM,GAADL,OAAIV,EAAaC,QAAO,oBAAoB,CACtDe,OAAQ,QACRd,QAASF,EAAaE,QACtBe,KAAMC,KAAKC,UAAU,CACnBiI,OAAQA,EAAOA,WAEhBhI,MAAK,SAACf,GAAG,OAAKD,EAAUC,EAAI,KI4G5Be,MAAK,SAACS,GACLsH,EAAaE,MAAMC,gBAAkB,OAAH5I,OAAUmB,EAAOuH,OAAM,KACzD9E,EAAWyE,EACb,IAEChH,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,IACC0G,SAAQ,WACPT,EAAQjE,EAAIY,QAAQ,EACtB,GACJ,IAMApE,QAAQ+I,IAAI,CJlMHxI,MAAM,GAADL,OAAIV,EAAaC,QAAO,aAAa,CAC/CC,QAASF,EAAaE,UACrBkB,MAAK,SAACf,GAAG,OAAKD,EAAUC,EAAI,IAKxBU,MAAM,GAADL,OAAIV,EAAaC,QAAO,UAAU,CAC5CC,QAASF,EAAaE,UACrBkB,MAAK,SAACf,GAAG,OAAKD,EAAUC,EAAI,II+C5Be,MAAK,SAACoI,GAEL,OADAvH,QAAQC,IAAI,uBAAwBsH,GAC7BA,CACT,IACCzH,OAAM,SAACY,GAEN,OADAV,QAAQU,MAAM,gCAAiCA,GACxC,EACT,MAoIDvB,MAAK,SAAAqI,GAA8B,I,IAAAC,G,EAAA,E,4CAAAD,I,s1BAA5BE,EAAQD,EAAA,GAAEE,EAAYF,EAAA,GAC5BrH,EAASsH,EAASjG,IAClBuD,EAAa0C,EAASP,OACtB/B,EAAahE,YAAcsG,EAASvG,KACpCkE,EAAmBjE,YAAcsG,EAASnB,MAC1CW,EAAaE,MAAMC,gBAAkB,OAAH5I,OAAUuG,EAAU,KAEtD2C,EAAatD,SAAQ,SAAClE,GACpB,IAAMK,EAAcN,EAClBC,EACAC,EACAX,EACAqC,EACAvB,GAEFwE,EAAW6C,OAAOpH,EACpB,GACF,IACCV,OAAM,SAACC,GACNC,QAAQC,IAAI,0BAA2BF,EACzC,G","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["const configServer = {\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-41/\",\n  headers: {\n    Authorization: \"844a6d3c-6629-4629-bf68-17161ba22f81\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\n// Функция обработки результата\nfunction getresult(res) {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status} ${res.statusText}`);\n}\n\n// Функция получения информации о пользователи\nconst getUserData = () => {\n  return fetch(`${configServer.baseUrl}/users/me`, {\n    headers: configServer.headers,\n  }).then((res) => getresult(res));\n};\n\n//Функция запроса карт с сервера\nconst getAllCards = () => {\n  return fetch(`${configServer.baseUrl}/cards`, {\n    headers: configServer.headers,\n  }).then((res) => getresult(res));\n};\n\n//Функция обновления информации\nconst updateUserInfo = (newProfile) => {\n  return fetch(`${configServer.baseUrl}/users/me`, {\n    method: \"PATCH\",\n    headers: configServer.headers,\n    body: JSON.stringify({\n      name: newProfile.name,\n      about: newProfile.about,\n    }),\n  }).then((res) => getresult(res));\n};\n\n//Функция добавление новой карточки на сервер\nconst postNewCard = (newCard) => {\n  return fetch(`${configServer.baseUrl}/cards`, {\n    method: \"POST\",\n    headers: configServer.headers,\n    body: JSON.stringify({\n      name: newCard.name,\n      link: newCard.link,\n    }),\n  }).then((res) => getresult(res));\n};\n\n//Функция добавления лайка на сервер\nconst putLikeCard = (cardId) => {\n  return fetch(`${configServer.baseUrl}/cards/likes/${cardId}`, {\n    method: \"PUT\",\n    headers: configServer.headers,\n    body: JSON.stringify({}),\n  }).then((res) => getresult(res));\n};\n\n//Функция удаления карточки\nconst delLikeCard = (cardId) => {\n  return fetch(`${configServer.baseUrl}/cards/likes/${cardId}`, {\n    method: \"DELETE\",\n    headers: configServer.headers,\n  }).then((res) => getresult(res));\n};\n\n//Функция удаления карточки по ID\nconst deleteCardId = (cardId) => {\n  return fetch(`${configServer.baseUrl}/cards/${cardId}`, {\n    method: \"DELETE\",\n    headers: configServer.headers,\n  }).then((res) => getresult(res));\n};\n\n//Функция изменения аватара\nconst updateUserAvatar = (avatar) => {\n  return fetch(`${configServer.baseUrl}/users/me/avatar`, {\n    method: \"PATCH\",\n    headers: configServer.headers,\n    body: JSON.stringify({\n      avatar: avatar.avatar,\n    }),\n  }).then((res) => getresult(res));\n};\n\nexport {\n  getUserData,\n  getAllCards,\n  updateUserInfo,\n  postNewCard,\n  putLikeCard,\n  delLikeCard,\n  deleteCardId,\n  updateUserAvatar,\n};\n","import { putLikeCard, delLikeCard, deleteCardId } from \"./api\";\n\nconst cardTemplate = document.querySelector(\"#card-template\").content;\n\n/*Функция удаления карточки*/\nfunction handleCardDelete(card, cardId) {\n  return deleteCardId(cardId)\n    .then((result) => {\n      card.remove();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\n/*Функция создания карточки*/\nfunction createCard(\n  cardData,\n  userId,\n  deleteCardCallback,\n  LikeCard,\n  onOpenImagePopup\n) {\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\n\n  if (!cardElement) {\n    console.error(\"Элемент .card не найден в шаблоне\");\n    return null;\n  }\n\n  const cardImage = cardElement.querySelector(\".card__image\");\n  const cardTitle = cardElement.querySelector(\".card__title\");\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\n  const likeButton = cardElement.querySelector(\".card__like-button\");\n  const likeCounter = cardElement.querySelector(\".card__like-counter\");\n\n  if (\n    !cardImage ||\n    !cardTitle ||\n    !deleteButton ||\n    !likeButton ||\n    !likeCounter\n  ) {\n    console.error(\"Ошибка в структуре шаблона карточки\");\n    return null;\n  }\n\n  // Заполняем данные карточки\n  cardImage.src = cardData.link;\n  cardImage.alt = `Изображение места: ${cardData.name}`;\n  cardTitle.textContent = cardData.name;\n  likeCounter.textContent = cardData.likes.length;\n\n  const isLiked = cardData.likes.some((like) => like._id === userId);\n  if (isLiked) {\n    likeButton.classList.add(\"card__like-button_is-active\");\n  }\n\n  if (userId === cardData.owner._id) {\n    deleteButton.addEventListener(\"click\", () => {\n      deleteCardCallback(cardElement, cardData._id);\n    });\n  } else {\n    deleteButton.remove();\n  }\n\n  likeButton.addEventListener(\"click\", () => {\n    LikeCard(likeButton, cardData._id, likeCounter);\n  });\n\n  cardImage.addEventListener(\"click\", () => {\n    onOpenImagePopup(cardData);\n  });\n\n  return cardElement;\n}\n\n// Лайк\nfunction likeCard(evt, cardId, likeCounter) {\n  const like = evt.classList.contains(\"card__like-button_is-active\")\n    ? delLikeCard\n    : putLikeCard;\n  like(cardId)\n    .then((result) => {\n      evt.classList.toggle(\"card__like-button_is-active\");\n      likeCounter.textContent = result.likes.length;\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nexport { createCard, handleCardDelete, likeCard };\n","// Открытие попапа\nfunction openPopup(popup) {\n  if (!popup) return;\n  popup.classList.add(\"popup_is-opened\");\n  document.addEventListener(\"keydown\", closeByEscape);\n}\n\n// Закрытие попапа\nfunction closePopup(popup) {\n  if (!popup) return;\n  popup.classList.remove(\"popup_is-opened\");\n  document.removeEventListener(\"keydown\", closeByEscape);\n}\n\n// Закрытие попапа по ESC\nfunction closeByEscape(event) {\n  if (event.key === \"Escape\") {\n    const activePopup = document.querySelector(\".popup_is-opened\");\n    if (activePopup) closePopup(activePopup);\n  }\n}\n\n// Закрытие попапа по клику на \"Х\" или оверлей\nfunction closePopupByOverlayOrButton(event) {\n  if (\n    event.target.classList.contains(\"popup__close\") ||\n    event.target === event.currentTarget\n  ) {\n    const popup = event.target.closest(\".popup\");\n    if (popup && popup.classList.contains(\"popup_is-opened\")) {\n      closePopup(popup);\n    }\n  }\n}\n\n\nexport { openPopup, closePopup, closePopupByOverlayOrButton };","//=====ФУНКЦИИ===АКТИВАЦИИ===ВАЛИДНОСТИ=====\n\n// функция сообщения ошибки\nconst showInputError = (formElement, inputElement, errorMessage) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.add(\"popup__input_type_error\");\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(\"popup__input-error_active\");\n};\n\n// функция очистки ошибок\nconst hideInputError = (formElement, inputElement) => {\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\n  inputElement.classList.remove(\"popup__input_type_error\");\n  errorElement.classList.remove(\"popup__input-error_active\");\n  errorElement.textContent = '';\n};\n\n// функция проверки валидности\nconst isValid = (formElement, inputElement, validationObj) => {\n    if (inputElement.validity.patternMismatch) {\n        inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n        inputElement.setCustomValidity(\"\");\n  }\n\n  inputElement.checkValidity();\n\n    if (!inputElement.validity.valid) {\n        showInputError(formElement, inputElement, inputElement.validationMessage);\n  } else {\n        hideInputError(formElement, inputElement);\n  }\n};\n\n\n\n//функция проверки перед отправкой\nconst hasInvalidInput = (inputList) => {\n  return inputList.some((inputElement) => {\n    return !inputElement.validity.valid;\n  });\n};\n\n\n//функция управления состоянии кнопки\nconst toggleButtonState =(inputList, buttonElement) => {\nif (hasInvalidInput(inputList)) {\n    buttonElement.disabled = true;\n    buttonElement.classList.add(\"popup__button_inactive\");\n} else {\n    buttonElement.disabled = false;\n  buttonElement.classList.remove(\"popup__button_inactive\");\n} \n}\n\nconst setEventListener = (formElement, validationObj) => {\n    const inputList = Array.from(formElement.querySelectorAll(validationObj.inputSelector));\n    const buttonElement = formElement.querySelector(validationObj.submitButtonSelector);\n    toggleButtonState(inputList, buttonElement, validationObj);\n    inputList.forEach((inputElement) => {\n        inputElement.addEventListener('input', () => {\n            isValid(formElement, inputElement, validationObj)\n            toggleButtonState(inputList, buttonElement, validationObj)\n        });\n    });\n};\n\nconst enableValidation = (validationObj) => {\n    const formList = Array.from(document.querySelectorAll(validationObj.formSelector));\n    formList.forEach((formElement) => {\n        setEventListener(formElement, validationObj);\n    });\n}\n\nconst validationConfig = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n};\n\n// Функция очистки валидации формы\nconst clearValidation = (formElement, validationObj) => {\n    const listErrorSpan = Array.from(formElement.querySelectorAll(validationObj.inputSelector));\n    const buttonElement = formElement.querySelector(validationObj.submitButtonSelector);\n    listErrorSpan.forEach((inputElement) => {\n        hideInputError(formElement, inputElement, validationObj);\n    });\n    toggleButtonState(listErrorSpan, buttonElement, validationObj)\n}\nexport {enableValidation, clearValidation};\n\n\n\n\n\n","import \"./pages/index.css\";\nimport { createCard, handleCardDelete, likeCard } from \"./components/card\";\nimport {\n  openPopup,\n  closePopup,\n  closePopupByOverlayOrButton,\n} from \"./components/modal\";\nimport {\n  getUserData,\n  getAllCards,\n  updateUserInfo,\n  postNewCard,\n  updateUserAvatar,\n} from \"./components/api\";\nimport { enableValidation, clearValidation } from \"./components/validation\";\n\nconst validationConfig = {\n  formSelector: \".popup__form\",\n  inputSelector: \".popup__input\",\n  submitButtonSelector: \".popup__button\",\n  inactiveButtonClass: \"popup__button_disabled\",\n  inputErrorClass: \"popup__input_type_error\",\n  errorClass: \"popup__error_visible\",\n};\n\nenableValidation(validationConfig);\n\n// ========== DOM ==========\nconst placesList = document.querySelector(\".places__list\");\nlet userId = \"\";\nlet userAvatar = \"\";\n// Модальные окна\nconst popupEditProfile = document.querySelector(\".popup_type_edit\");\nconst popupAddCard = document.querySelector(\".popup_type_new-card\");\nconst popupImage = document.querySelector(\".popup_type_image\");\n// Редактирование профиля\nconst profileTitle = document.querySelector(\".profile__title\");\nconst profileDescription = document.querySelector(\".profile__description\");\nconst editButton = document.querySelector(\".profile__edit-button\");\nconst formEdit = popupEditProfile?.querySelector(\".popup__form\");\nconst nameInput = formEdit?.querySelector(\".popup__input_type_name\");\nconst jobInput = formEdit?.querySelector(\".popup__input_type_description\");\n\n// Добавление карточки\nconst addCardButton = document.querySelector(\".profile__add-button\");\nconst formNewCard = popupAddCard?.querySelector(\".popup__form\");\nconst inputName = formNewCard?.querySelector(\".popup__input_type_card-name\");\nconst inputLink = formNewCard?.querySelector(\".popup__input_type_url\");\n\n// Изображение в попапе\nconst imagePopupImg = popupImage?.querySelector(\".popup__image\");\nconst imagePopupCaption = popupImage?.querySelector(\".popup__caption\");\n\n//Функция загрузка кнопки\nfunction loading(form, status) {\n  const button = form.querySelector(\".popup__button\");\n  if (status) {\n    button.textContent = \"Сохранение...\";\n  } else {\n    button.textContent = \"Сохранить\";\n  }\n}\n\n//Функция открытия модального окна с изображением\nfunction onOpenImagePopup(card) {\n  imagePopupImg.src = card.link;\n  imagePopupImg.alt = card.name;\n  imagePopupCaption.textContent = card.name;\n  openPopup(popupImage);\n}\n\n//Функция добовляет на страницу стартовых карточек\nfunction renderInitialCards() {\n  return getAllCards()\n    .then((cards) => {\n      console.log(\"Полученные карточки:\", cards);\n      return cards;\n    })\n    .catch((error) => {\n      console.error(\"Ошибка при загрузке карточек:\", error);\n      return [];\n    });\n}\n\n//Функция редоктирования профиля\nfunction fillProfileForm() {\n  if (nameInput && jobInput && profileTitle && profileDescription) {\n    nameInput.value = profileTitle.textContent;\n    jobInput.value = profileDescription.textContent;\n  }\n}\n//Функция Обновляет данные профиля на странице\nfunction handleProfileSubmit(evt) {\n  evt.preventDefault();\n  loading(evt.target, true);\n\n  const newName = nameInput.value;\n  const newJob = jobInput.value;\n\n  profileTitle.textContent = newName;\n  profileDescription.textContent = newJob;\n\n  const newProfile = {\n    name: newName,\n    about: newJob,\n  };\n\n  updateUserInfo(newProfile)\n    .then((updatedUser) => {\n      console.log(\"Профиль успешно обновлён:\", updatedUser);\n    })\n    .catch((error) => {\n      console.error(\"Ошибка при сохранении профиля:\", error);\n    })\n    .finally(() => {\n      loading(evt.target, false);\n    });\n\n  closePopup(popupEditProfile);\n}\n\n//Функция Создаёт новую карточку\nfunction handleNewCardSubmit(evt) {\n  evt.preventDefault();\n  loading(evt.target, true);\n\n  const newCard = {\n    name: inputName.value,\n    link: inputLink.value,\n  };\n\n  postNewCard(newCard)\n    .then((card) => {\n      const cardElement = createCard(\n        card,\n        userId,\n        handleCardDelete,\n        likeCard,\n        onOpenImagePopup\n      );\n\n      if (cardElement) {\n        placesList.prepend(cardElement);\n      }\n\n      evt.target.reset();\n      closePopup(popupAddCard);\n    })\n    .catch((error) => {\n      console.error(\"Ошибка при добавлении карточки:\", error);\n    })\n    .finally(() => {\n      loading(evt.target, false);\n    });\n}\n// Функция находит все попапы на странице\ndocument.querySelectorAll(\".popup\").forEach((popup) => {\n  popup.classList.add(\"popup_is-animated\");\n  popup.addEventListener(\"click\", closePopupByOverlayOrButton);\n});\n\n//Функция обработчик клика на кнопку редактирования профиля\neditButton?.addEventListener(\"click\", () => {\n  fillProfileForm();\n  openPopup(popupEditProfile);\n});\n\n//Функция обработчик клика на кнопку добавления новой карточки ,\naddCardButton?.addEventListener(\"click\", () => {\n  openPopup(popupAddCard);\n});\n\nformEdit.addEventListener(\"submit\", handleProfileSubmit);\nformNewCard?.addEventListener(\"submit\", handleNewCardSubmit);\n\n//Редактирование аватара\nconst profileImageButton = document.querySelector(\".profile__image-button\");\nconst popupUpdateAvatar = document.querySelector(\".popup__update_avatar\");\nconst popupInputAvatar = document.querySelector(\".popup__input_avatar\");\n\nprofileImageButton.addEventListener(\"click\", () => {\n  clearValidation(popupUpdateAvatar, validationConfig);\n  openPopup(popupUpdateAvatar);\n});\n\nconst profileImage = document.querySelector(\".profile__image\");\n\n// Функция редактирования аватара\nfunction handleUpdateAvatarSubmit(evt) {\n  evt.preventDefault();\n  loading(evt.target, true);\n\n  updateUserAvatar({\n    avatar: popupInputAvatar.value,\n  })\n    .then((result) => {\n      profileImage.style.backgroundImage = `url(${result.avatar})`;\n      closePopup(popupUpdateAvatar);\n    })\n\n    .catch((err) => {\n      console.log(err);\n    })\n    .finally(() => {\n      loading(evt.target, false);\n    });\n}\n\nconst avatar = document.querySelector('form[name=\"avatar\"]');\n\navatar.addEventListener(\"submit\", handleUpdateAvatarSubmit);\n\nPromise.all([getUserData(), renderInitialCards()])\n  .then(([userData, initialCards]) => {\n    userId = userData._id;\n    userAvatar = userData.avatar;\n    profileTitle.textContent = userData.name;\n    profileDescription.textContent = userData.about;\n    profileImage.style.backgroundImage = `url(${userAvatar})`;\n\n    initialCards.forEach((cardData) => {\n      const cardElement = createCard(\n        cardData,\n        userId,\n        handleCardDelete,\n        likeCard,\n        onOpenImagePopup\n      );\n      placesList.append(cardElement);\n    });\n  })\n  .catch((err) => {\n    console.log(\"Ошибка загрузки данных:\", err);\n  });\n"],"names":["configServer","baseUrl","headers","Authorization","getresult","res","ok","json","Promise","reject","concat","status","statusText","putLikeCard","cardId","fetch","method","body","JSON","stringify","then","delLikeCard","cardTemplate","document","querySelector","content","handleCardDelete","card","deleteCardId","result","remove","catch","err","console","log","createCard","cardData","userId","deleteCardCallback","LikeCard","onOpenImagePopup","cardElement","cloneNode","error","cardImage","cardTitle","deleteButton","likeButton","likeCounter","src","link","alt","name","textContent","likes","length","some","like","_id","classList","add","owner","addEventListener","likeCard","evt","contains","toggle","openPopup","popup","closeByEscape","closePopup","removeEventListener","event","key","activePopup","closePopupByOverlayOrButton","target","currentTarget","closest","hideInputError","formElement","inputElement","errorElement","id","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","validationObj","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","Array","from","querySelectorAll","forEach","patternMismatch","setCustomValidity","dataset","errorMessage","checkValidity","showInputError","validationMessage","isValid","setEventListener","placesList","userAvatar","popupEditProfile","popupAddCard","popupImage","profileTitle","profileDescription","editButton","formEdit","nameInput","jobInput","addCardButton","formNewCard","inputName","inputLink","imagePopupImg","imagePopupCaption","loading","form","value","preventDefault","newProfile","newName","newJob","about","updatedUser","finally","newCard","prepend","reset","profileImageButton","popupUpdateAvatar","popupInputAvatar","listErrorSpan","clearValidation","profileImage","avatar","style","backgroundImage","all","cards","_ref","_ref2","userData","initialCards","append"],"sourceRoot":""}